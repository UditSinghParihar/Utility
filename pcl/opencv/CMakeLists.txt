cmake_minimum_required(VERSION 2.8)
project(OpenCV)
set(CMAKE_CXX_STANDARD 14)

set(OpenCV_INCLUDE_DIRS /usr/local/include/opencv /usr/local/include)
set(OpenCV_LIBS -lopencv_stitching -lopencv_superres -lopencv_videostab -lopencv_aruco -lopencv_bgsegm -lopencv_bioinspired -lopencv_ccalib -lopencv_dnn_objdetect -lopencv_dpm -lopencv_face -lopencv_photo -lopencv_freetype -lopencv_fuzzy -lopencv_hdf -lopencv_hfs -lopencv_img_hash -lopencv_line_descriptor -lopencv_optflow -lopencv_reg -lopencv_rgbd -lopencv_saliency -lopencv_sfm -lopencv_stereo -lopencv_structured_light -lopencv_phase_unwrapping -lopencv_surface_matching -lopencv_tracking -lopencv_datasets -lopencv_text -lopencv_dnn -lopencv_plot -lopencv_xfeatures2d -lopencv_shape -lopencv_video -lopencv_ml -lopencv_ximgproc -lopencv_calib3d -lopencv_features2d -lopencv_highgui -lopencv_videoio -lopencv_flann -lopencv_xobjdetect -lopencv_imgcodecs -lopencv_objdetect -lopencv_xphoto -lopencv_imgproc -lopencv_core)
set(OpenCV_LIBRARY_DIRS /usr/local/lib)

include_directories(include)

find_package(PCL 1.7 REQUIRED)
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})

set(ALL_LIBS ${OpenCV_LIBS} ${PCL_LIBRARIES})

add_executable(cv_test cv_test.cpp)
add_executable(color2gray color2gray.cpp)
#add_executable(sift_icp sift_icp.cpp)
add_executable(cloud_coordinate_axis cloud_coordinate_axis.cpp)
#add_executable(orb_test orb_test.cpp)
#add_executable(feature_detectors feature_detectors.cpp)
add_executable(generate_point_cloud generate_point_cloud.cpp)
add_executable(generate_gibson_cloud generate_gibson_cloud.cpp)
add_executable(opencv_depthto3d opencv_depthto3d.cpp)

target_link_libraries(cv_test ${ALL_LIBS})
target_link_libraries(color2gray ${ALL_LIBS})
#target_link_libraries(sift_icp ${ALL_LIBS})
target_link_libraries(cloud_coordinate_axis ${ALL_LIBS})
#target_link_libraries(orb_test ${ALL_LIBS})
#target_link_libraries(feature_detectors ${ALL_LIBS})
target_link_libraries(generate_point_cloud ${ALL_LIBS})
target_link_libraries(generate_gibson_cloud ${ALL_LIBS})
target_link_libraries(opencv_depthto3d ${ALL_LIBS})